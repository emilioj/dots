(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)

;; This must come before configurations of installed packages
(package-initialize)

;; Avoid splash screen
(setq inhibit-splash-screen t)
(setq inhibit-startup-message t)

(load-theme 'zenburn t)

;; I do not like keeping these bars (menu, tool, scroll)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(tool-bar-mode -1)

(column-number-mode t) ;; show column number along with the row
(delete-selection-mode t) ;; replace active region just by typing text
(show-paren-mode t) ;; see matching pairs of patentheses and so on

(setq-default indent-tabs-mode nil) ;; avoid tabs and use spaces instead

(setq-default ispell-program-name "hunspell") ;; hunspell for spelling

;; Highlighting tabs, trailing whitespaces and long lines
;; (setq whitespace-style '(face spaces tabs newline space-mark tab-mark newline-mark ))
(setq whitespace-style '(face empty tabs tab-mark trailing lines-tail))
(global-whitespace-mode t)

;; Set a useful title for the buffer
;; (setq frame-title-format
;;       '(buffer-file-name "%f"
;;                          (dired-directory dired-directory "%b")))
(setq frame-title-format
      '("emacs - %b " "[%f]"))


;; latex and pdf-tools stuff
(add-hook 'LaTeX-mode-hook 'auto-fill-mode) ;; break long lines in latex bufs

(add-hook 'doc-view-mode-hook 'pdf-tools-install) ;; load pdf-tools

;; Use pdf-tools to open PDF files
(setq TeX-view-program-selection '((output-pdf "PDF Tools"))
      TeX-source-correlate-start-server t)

;; Use j/k to traverse pdf in a vim-like way
(defun pdf-vimlike-keys ()
  (local-set-key (kbd "j") 'pdf-view-next-line-or-next-page)
  (local-set-key (kbd "k") 'pdf-view-previous-line-or-previous-page)
  )

(add-hook 'pdf-view-mode-hook 'pdf-vimlike-keys)

;; update PDF buffers after successful LaTeX runs
(add-hook 'TeX-after-compilation-finished-functions
          #'TeX-revert-document-buffer)


;; org-mode stuff

;; Default key bindings for global org functions
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-iswitchb)

(setq org-directory "~/org/")
(setq org-agenda-files '("~/org"))

;; org-capture
(setq org-default-notes-file (concat org-directory "notes.org"))

;; o-blog stuff
(add-to-list 'load-path "/usr/local/src/o-blog")
(require 'o-blog)


;; engine-mode stuff
;; C-x / keybinding for launching the different engines

(require 'engine-mode)
(engine-mode t)

(setq engine/browser-function 'eww-browse-url)

;; Search functions prefixed with "C-x /"
;; => "C-X / s" search selection (or input) in stack overflow

(defengine duckduckgo
  "https://duckduckgo.com/?q=%s"
  :keybinding "d")

(defengine google
  "https://google.com/?q=%s"
  :keybinding "g")

(defengine stackoverlow
  "http://stackoverflow.com/search?q=%s"
  :keybinding "s")

(defengine texstackexchange
  "http://tex.stackexchange.com/search?q=%s"
  :keybinding "t")

(defengine github
  "https://github.com/search?ref=simplesearch&q=%s"
  :keybinding "h")


;; custom stuff
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file 'noerror)
